[{"/Users/saulv/Code/DevEdCourses/creativeReactAndReduxCourse/waveMusicPlayer/src/index.js":"1","/Users/saulv/Code/DevEdCourses/creativeReactAndReduxCourse/waveMusicPlayer/src/reportWebVitals.js":"2","/Users/saulv/Code/DevEdCourses/creativeReactAndReduxCourse/waveMusicPlayer/src/App.js":"3","/Users/saulv/Code/DevEdCourses/creativeReactAndReduxCourse/waveMusicPlayer/src/components/song.js":"4","/Users/saulv/Code/DevEdCourses/creativeReactAndReduxCourse/waveMusicPlayer/src/components/player.js":"5","/Users/saulv/Code/DevEdCourses/creativeReactAndReduxCourse/waveMusicPlayer/src/data.js":"6","/Users/saulv/Code/DevEdCourses/creativeReactAndReduxCourse/waveMusicPlayer/src/components/library.js":"7","/Users/saulv/Code/DevEdCourses/creativeReactAndReduxCourse/waveMusicPlayer/src/components/librarySong.js":"8","/Users/saulv/Code/DevEdCourses/creativeReactAndReduxCourse/waveMusicPlayer/src/components/nav.js":"9"},{"size":506,"mtime":1607227144623,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1607093046928,"results":"12","hashOfConfig":"11"},{"size":1502,"mtime":1607491165183,"results":"13","hashOfConfig":"11"},{"size":254,"mtime":1607233838975,"results":"14","hashOfConfig":"11"},{"size":4182,"mtime":1607487531456,"results":"15","hashOfConfig":"11"},{"size":2494,"mtime":1607231061198,"results":"16","hashOfConfig":"11"},{"size":728,"mtime":1607381641778,"results":"17","hashOfConfig":"11"},{"size":560,"mtime":1607487315490,"results":"18","hashOfConfig":"11"},{"size":404,"mtime":1607380904664,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ozdhdz",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/saulv/Code/DevEdCourses/creativeReactAndReduxCourse/waveMusicPlayer/src/index.js",[],["40","41"],"/Users/saulv/Code/DevEdCourses/creativeReactAndReduxCourse/waveMusicPlayer/src/reportWebVitals.js",[],"/Users/saulv/Code/DevEdCourses/creativeReactAndReduxCourse/waveMusicPlayer/src/App.js",[],"/Users/saulv/Code/DevEdCourses/creativeReactAndReduxCourse/waveMusicPlayer/src/components/song.js",[],"/Users/saulv/Code/DevEdCourses/creativeReactAndReduxCourse/waveMusicPlayer/src/components/player.js",["42"],"import { useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n} from '@fortawesome/free-solid-svg-icons';\n\nconst Player = ({\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  audioRef,\n  setSongInfo,\n  songInfo,\n  songs,\n  setCurrentSong,\n  setSongs,\n}) => {\n  useEffect(() => {\n    const newSongs = songs.map((song) => {\n      if (song.id === currentSong.id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n  }, [currentSong]);\n  //eventHandlers\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2)\n    );\n  };\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //calc percentage\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration,\n      animationPercentage: animation,\n    });\n  };\n  const autoPlayHandler = () => {\n    if (isPlaying) {\n      audioRef.current.play();\n    }\n  };\n  const skipTrackHandler = async (direction) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    if (direction === 'skip-forward') {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    }\n    if (direction === 'skip-back') {\n      if ((currentIndex - 1) % songs.length === -1) {\n        await setCurrentSong(songs[songs.length - 1]);\n        if (isPlaying) audioRef.current.play();\n        return;\n      }\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n    }\n    if (isPlaying) audioRef.current.play();\n  };\n  const trackAnim = {\n    transform: `translateX(${songInfo.animationPercentage}%)`,\n  };\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <div\n          style={{\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\n          }}\n          className=\"track\"\n        >\n          <input\n            type=\"range\"\n            min=\"0\"\n            value={songInfo.currentTime}\n            max={songInfo.duration || 0}\n            onChange={dragHandler}\n          />\n          <div className=\"animate-track\" style={trackAnim}></div>\n        </div>\n\n        <p>{songInfo.duration ? getTime(songInfo.duration) : '0:00'}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler('skip-back')}\n          className=\"skip-back\"\n          size=\"2x\"\n          icon={faAngleLeft}\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className=\"play\"\n          size=\"2x\"\n          icon={isPlaying ? faPause : faPlay}\n        />\n        <FontAwesomeIcon\n          className=\"skip-forward\"\n          size=\"2x\"\n          icon={faAngleRight}\n          onClick={() => skipTrackHandler('skip-forward')}\n        />\n      </div>\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedData={autoPlayHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onLoadedMetadata={timeUpdateHandler}\n        audioRef={audioRef}\n        onEnded={songEndHandler}\n      />\n    </div>\n  );\n};\nexport default Player;\n","/Users/saulv/Code/DevEdCourses/creativeReactAndReduxCourse/waveMusicPlayer/src/data.js",[],"/Users/saulv/Code/DevEdCourses/creativeReactAndReduxCourse/waveMusicPlayer/src/components/library.js",[],"/Users/saulv/Code/DevEdCourses/creativeReactAndReduxCourse/waveMusicPlayer/src/components/librarySong.js",[],"/Users/saulv/Code/DevEdCourses/creativeReactAndReduxCourse/waveMusicPlayer/src/components/nav.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":36,"column":6,"nodeType":"49","endLine":36,"endColumn":19,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSongs' and 'songs'. Either include them or remove the dependency array. If 'setSongs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [currentSong, setSongs, songs]",{"range":"56","text":"57"},[661,674],"[currentSong, setSongs, songs]"]